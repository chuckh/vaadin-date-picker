{"version":3,"sources":["vaadin-date-picker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;QAgBM,yCAAyC;;;;;;;;;;;;;YAAzC,yCAAyC,GAAG,iBAAU,CAAC,IAAI,eAAQ,CACrE,0BAAiB,EAAE;gBACjB,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,gBAAgB,EAAhB,CAAgB,CAAC;gBAC/C,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC,CAAC;YAMR;gBAAsC,oCAAoB;gBA8BxD,0BAAY,QAAkB,EAAE,EAAc,EAAW,SAAmB;oBA9B9E,iBA6CC;oBAdG,kBAAM,QAAQ,EAAE,EAAE,CAAC,CAAC;oBADmC,cAAS,GAAT,SAAS,CAAU;oBA1BpE,qBAAgB,GAAG,KAAK,CAAC;oBAMvB,gBAAW,GAAsB,IAAI,mBAAY,CAAC,KAAK,CAAC,CAAC;oBAuBjE,EAAE,CAAC,CAAC,CAAO,MAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBACpE,OAAO,CAAC,KAAK,CAAC,yHAAyH,CAAC,CAAC;wBACzI,MAAM,CAAC;oBACT,CAAC;oBAED,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,aAAa,CAAC;oBACjC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,uBAAuB,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE;wBACjE,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;4BACpD,KAAI,CAAC,SAAS,EAAE,CAAC;wBACnB,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;gBAtCD,mCAAQ,GAAR;oBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAS,CAAC,CAAC;gBACxD,CAAC;gBAID,uCAAY,GAAZ,UAAa,KAAK;oBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAC1B,gEAAgE;wBAChE,mCAAmC;wBACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC/B,CAAC;oBAED,qEAAqE;oBACrE,sBAAsB;oBACtB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;oBAC1E,CAAC;gBACH,CAAC;gBAlBD;oBAAC,aAAM,EAAE;;qEAAA;gBACT;oBAAC,mBAAY,CAAC,eAAe,EAAE,CAAC,qBAAqB,CAAC,CAAC;;;;oEAAA;gBAfzD;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,SAAS,EAAE,CAAC,yCAAyC,CAAC;qBACvD,CAAC;;oCAAA;gBA8CF,uBAAC;YAAD,CA7CA,AA6CC,CA7CqC,6BAAoB,GA6CzD;YA7CD,+CA6CC,CAAA","file":"vaadin-date-picker.js","sourcesContent":["import {\n  Injector,\n  OnInit,\n  Directive,\n  ElementRef,\n  Output,\n  HostListener,\n  EventEmitter,\n  Provider,\n  forwardRef,\n  Renderer\n} from 'angular2/core';\nimport { NgControl, NG_VALUE_ACCESSOR, DefaultValueAccessor } from 'angular2/common';\nimport { CONST_EXPR } from 'angular2/src/facade/lang';\ndeclare var Polymer;\n\nconst VAADIN_DATE_PICKER_CONTROL_VALUE_ACCESSOR = CONST_EXPR(new Provider(\n    NG_VALUE_ACCESSOR, {\n      useExisting: forwardRef(() => VaadinDatePicker),\n      multi: true\n    }));\n\n@Directive({\n  selector: 'vaadin-date-picker',\n  providers: [VAADIN_DATE_PICKER_CONTROL_VALUE_ACCESSOR]\n})\nexport class VaadinDatePicker extends DefaultValueAccessor implements OnInit {\n\n  private _element;\n  private _control;\n  private _initialValueSet = false;\n\n  ngOnInit() {\n    this._control = this._injector.getOptional(NgControl);\n  }\n\n  @Output() valueChange: EventEmitter<any> = new EventEmitter(false);\n  @HostListener('value-changed', ['$event.detail.value'])\n  valuechanged(value) {\n    this.valueChange.emit(value);\n\n    if (this._initialValueSet) {\n      // Do not trigger onChange when the initial (empty) value is set\n      // to keep the field as \"pristine\".\n      this.onChange(value);\n    } else {\n      this._initialValueSet = true;\n    }\n\n    // Pass the invalid state to our native vaadin-date-picker element if\n    // it is an ngControl.\n    if (this._control != null) {\n      this._element.invalid = !this._control.pristine && !this._control.valid;\n    }\n  }\n\n  constructor(renderer: Renderer, el: ElementRef,  private _injector: Injector) {\n    super(renderer, el);\n\n    if (!(<any>window).Polymer ||Â !Polymer.isInstance(el.nativeElement)) {\n      console.error(\"vaadin-date-picker has not been imported yet, please remember to import vaadin-date-picker.html in your main HTML page.\");\n      return;\n    }\n\n    this._element = el.nativeElement;\n    this._element.$$('paper-input-container').addEventListener('blur', () => {\n      if (!this._element.opened && !this._element._opened) {\n        this.onTouched();\n      }\n    });\n  }\n}\n"],"sourceRoot":"/source/"}